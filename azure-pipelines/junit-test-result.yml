trigger:
- main

stages:
# ðŸ”¨ Build Stage
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: BuildJob
    displayName: 'Build Job'
    pool:
      name: Azure Pipelines
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm run build
        npm test
      displayName: 'Install dependencies, build, and test'

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/TEST-*.xml'
      displayName: 'Publish Test Results'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true
      displayName: 'Archive Build Output'

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'drop'
      displayName: 'Publish Build Artifacts'

# ðŸš€ Deploy Stage
- stage: Deploy
  displayName: 'Deploy Stage'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: DeployJob
    displayName: 'Deploy to Azure App Service'
    pool:
      name: Azure Pipelines
    steps:
    - download: current
      artifact: drop

    - task: AzureWebApp@1
      inputs:
        azureSubscription: '<Functionapplab>'
        appName: '<Lab6andrew>'
        package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
      displayName: 'Deploy ZIP to Azure App Service'